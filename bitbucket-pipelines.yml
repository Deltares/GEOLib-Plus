# This is a sample build configuration for Python.
# Check our guides at https://confluence.atlassian.com/x/x4UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: python:3.7.7

clone:
  lfs: true

pipelines:
  default:
    - step:
        name: Install requirements.
        caches:
          - pip
        script: # Modify the commands below to build your repository.
          - pip install -r requirements.txt
    - parallel:
        - step: # Run unittest
            name: Run unittest and codecoverage.
            caches:
              - pip
            script:
              - pip install -r requirements.txt
              - pytest -v --cov=geolib_plus --cov-report xml:test-reports/coverage.xml --junitxml=test-reports/report_unit.xml tests/ -m "unittest and not workinprogress"
        - step: # Run integrationtest
            name: Run integrationtest.
            caches:
              - pip
            script:
              - pip install -r requirements.txt
              - pytest -v --junitxml=test-reports/report_integration.xml tests/ -m "integrationtest and not workinprogress"
        - step: # Run systemtest
            name: Run systemtest.
            caches:
              - pip
            script:
              - pip install -r requirements.txt
              - pytest -v --junitxml=test-reports/report_system.xml tests/ -m "systemtest and not workinprogress"
  branches:
    master:
      - step: # Install packages.
          name: Install packages.
          caches:
            - pip
          script:
            - pip install -r requirements.txt
      - parallel:
          - step: # Run tests with code coverage for unittest
              name: Run tests and code coverage.
              caches:
                - pip
              script:
                - pip install -r requirements.txt
                - pytest -v --cov=geolib_plus --cov-report xml:test-reports/coverage.xml --junitxml=test-reports/report.xml tests/ -m "unittest and not workinprogress"
                - pytest -v -m "not unittest and not workinprogress"
          - step: # create documentation
              name: Create documentation.
              caches:
                - pip
              script:
                - pip install -r requirements.txt
                - cd docs && make html
                - apt-get update && apt-get --yes install zip
                - cd build/html && zip -r docs.zip *
                # - pipe: atlassian/bitbucket-upload-file:0.1.3
                #   variables:
                #     BITBUCKET_USERNAME: $BITBUCKET_USERNAME
                #     BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
                #     FILENAME: "docs.zip"
